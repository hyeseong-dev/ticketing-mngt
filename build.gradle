plugins {
    id 'org.springframework.boot' version '3.3.0' apply false
    id 'io.spring.dependency-management' version '1.1.5' apply false
    id 'java'
}

allprojects {
    group = 'com.mngt'
    version = '1.0.0-SNAPSHOT'

    repositories {
        mavenCentral()
    }

    ext {
        springCloudVersion = "2023.0.2"
        jwtVersion = "0.12.5"
        jacksonVersion = '2.15.2'
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = '17'
    targetCompatibility = '17'

    configurations {
        all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'

        implementation "org.springframework.boot:spring-boot-starter-log4j2"
        implementation "org.apache.logging.log4j:log4j-slf4j2-impl"
        implementation "org.apache.logging.log4j:log4j-api"
        implementation "org.apache.logging.log4j:log4j-core"
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    tasks.withType(Test) {
        useJUnitPlatform()
    }
}

// 각 서비스 모듈에 대한 기본 설정
def configureServiceModule = { proj ->
    proj.apply plugin: 'java'
    proj.apply plugin: 'org.springframework.boot'
    proj.apply plugin: 'io.spring.dependency-management'

    proj.dependencies {
        implementation project(':core')
    }

    proj.bootJar { enabled = true }
    proj.jar { enabled = false }
}

project(":core") {
    apply plugin: 'java-library'
    apply plugin: 'io.spring.dependency-management'

    dependencies {
        api "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
        api "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
        api "org.springframework:spring-web"
    }

    bootJar { enabled = false }
    jar { enabled = true }
}

project(":eureka-service") {
    dependencies {
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
    }
    bootJar { enabled = true }
    jar { enabled = false }
}

project(":gateway-service") {
    bootJar { enabled = true }
    jar { enabled = false }
}

project(":concert-service") { configureServiceModule(it) }
project(":payment-service") { configureServiceModule(it) }
project(":reservation-service") { configureServiceModule(it) }
project(":waiting-service") { configureServiceModule(it) }
project(":user-service") { configureServiceModule(it) }