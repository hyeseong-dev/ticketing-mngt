plugins {
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'java'
    id 'jacoco'
    id 'checkstyle'
}

group = 'com.mgnt'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'io.github.cdimascio:dotenv-java:2.2.0'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.3.0'
    implementation 'org.springframework.boot:spring-boot-starter-web:3.3.0'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    testImplementation 'org.springframework.security:spring-security-test'
    developmentOnly 'org.springframework.boot:spring-boot-devtools:3.3.0'

    runtimeOnly 'com.mysql:mysql-connector-j:8.0.31'

    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'

    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.3.0'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.10.2'
    implementation 'jakarta.annotation:jakarta.annotation-api:2.0.0'

    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

    testImplementation 'org.mockito:mockito-core:4.6.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.6.1'

    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    implementation 'com.google.guava:guava:33.0.0-jre'

    testImplementation 'io.rest-assured:rest-assured:5.3.1'

    testImplementation 'org.jacoco:org.jacoco.agent:0.8.8'

    testImplementation 'com.h2database:h2'
}

def generated = layout.buildDirectory.dir("/generated/querydsl").get().asFile

sourceSets {
    main.java.srcDir generated
}

tasks.register('cleanGenerated', Delete) {
    delete generated
}

clean.dependsOn(cleanGenerated)

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy tasks.jacocoTestReport
}

checkstyle {
    toolVersion = '10.15.0'
    configFile = file("${rootDir}/config/checkstyle/google_checks.xml")
}

jacoco {
    toolVersion = "0.8.8" // 최신 버전으로 수정
    reportsDirectory = file("${buildDir}/JacocoTestReport")
}

jacocoTestReport {
    dependsOn test

    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }

    finalizedBy 'jacocoTestCoverageVerification'
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            enabled = true
            element = 'CLASS'

            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.00
            }

            limit {
                counter = 'METHOD'
                value = 'COVEREDRATIO'
                minimum = 0.00
            }
        }
    }
}

task testAndGenerateReport {
    group 'verification'
    description 'test w/ jacoco'

    dependsOn ':test', ':jacocoTestReport', ':jacocoTestCoverageVerification'

    tasks.jacocoTestReport.mustRunAfter tasks.test
    tasks.jacocoTestCoverageVerification.mustRunAfter tasks.jacocoTestReport
}

bootJar {
    mainClass = 'com.mgnt.ticketing.TicketingApplication'
}

jar {
    enabled = false
}
