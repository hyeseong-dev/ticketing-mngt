debug: true # 디버그 모드를 비활성화합니다.
management.endpoints.web.exposure.include: "*" # 모든 관리 엔드포인트를 노출합니다.

logging:
  level:
    org:
      hibernate:
        SQL: DEBUG

server:
  error:
    whitelabel:
      enabled: false
    include-message: always
  servlet:
    encoding:
      force-response: true
    context-path: /
    context-parameters:
      throwExceptionIfNoHandlerFound: true

spring:
  docker:
    compose:
      enabled: false

  jackson:
    property-naming-strategy: SNAKE_CASE

  web:
    resources:
      add-mappings: false
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${GMAIL_USERNAME}
    password: ${GMAIL_APP_PASSWORD}

    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  application:
    name: ticketing # 애플리케이션 이름을 'ticketing'으로 설정합니다.

  datasource:
    url: jdbc:h2:mem:testdb;MODE=MySQL;DB_CLOSE_DELAY=-1
    username: sa
    password:
    driver-class-name: org.h2.Driver

  jpa:
    hibernate:
      ddl-auto: none # Hibernate가 DDL(Domain Data Language) 명령을 자동으로 실행하지 않도록 설정합니다.
    show-sql: true # SQL 쿼리를 콘솔에 출력하도록 설정합니다.


jwt:
  #  secret:
  #    key: ${JWT_SECRET_KEY}
  secret: "7Iqk7YyM66W07YOA7L2U65Sp7YG065+9U3ByaW5n6rCV7J2Y7Yqc7YSw7LWc7JuQ67mI7J6F64uI64ukLg=="
  access-token-validity: 3600000 # 1 hour
  refresh-token-validity: 1296000000 # 15 days


springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha