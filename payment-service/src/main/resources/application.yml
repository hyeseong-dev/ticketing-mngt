logging:
  level:
    org.springframework.security: INFO
    com.mgnt.ticketing: DEBUG
#    org.hibernate.type.descriptor.sql.BasicBinder: trace

server:
  port: 8084
  error:
    whitelabel:
      enabled: true
    include-message: always
  servlet:
    context-path: /
    context-parameters:
      throwExceptionIfNoHandlerFound: true

spring:
  application:
    name: payment-service
  config:
    import:
      - classpath:/application-prod.yml
      - classpath:/application-local.yml
      - classpath:/application-secrets.yml

  jackson:
    property-naming-strategy: SNAKE_CASE
    time-zone: Asia/Seoul

  web:
    resources:
      add-mappings: false

  jpa:
    defer-datasource-initialization: true # 데이터 소스 초기화를 지연시킵니다.
    hibernate.ddl-auto: none
    show-sql: true # SQL 쿼리를 콘솔에 출력하도록 설정합니다.
    properties:
      hibernate:
        format_sql: true # 출력되는 SQL 쿼리를 읽기 쉽게 포맷합니다.
        show_sql: true # SQL 쿼리를 출력하도록 설정합니다.
        dialect: org.hibernate.dialect.MySQLDialect
        default_batch_fetch_size: 500 # Hibernate가 한 번에 가져올 배치 크기를 100으로 설정합니다.
  kafka:
    bootstrap-servers: localhost:9092,kafka:9092
    consumer:
      group-id: payment-service-group