name: EC2 이미지 빌드 및 배포

on:
  push:
    branches: [ release ]

env:
  ENVIRONMENT: prod
  PROJECT_NAME: ticketing
  ECR_NAME: ticketing-prod
  ECR_URI: ${{ secrets.ECR_URI }}
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: ticketing
  JAVA_VERSION: '17'
  EC2_USER: ubuntu
  EC2_HOST: ${{ secrets.EC2_HOST }}

jobs:
  build-and-deploy:
    name: 빌드 그리고 배포
    runs-on: ubuntu-latest

    steps:
      # Step 1: 코드 체크아웃
      - name: 코드 체크아웃
        uses: actions/checkout@v2
      - name: 코드 체크아웃 완료
        run: |
          echo "Step 1: 코드 체크아웃 완료"

      # Step 2: AWS 자격 증명 설정
      - name: AWS 자격 증명 설정
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
      - name: AWS 자격 증명 설정 완료
        run: |
          echo "Step 2: AWS 자격 증명 설정 완료"

      # Step 3: .env.prod 파일 생성 및 업로드
      - name: .env.prod 파일 생성
        run: |
          echo "Step 3: .env.prod 파일 생성 시작"
          echo "PROJECT_NAME=${{env.PROJECT_NAME}}" > .env.prod
          echo "MYSQL_USERNAME=${{ secrets.MYSQL_USERNAME }}" >> .env.prod
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env.prod
          echo "MYSQL_HOST=${{ secrets.MYSQL_HOST }}" >> .env.prod
          echo "MYSQL_PORT=${{ secrets.MYSQL_PORT }}" >> .env.prod
          echo "MYSQL_DB_NAME=${{ secrets.MYSQL_DB_NAME }}" >> .env.prod
          echo "GMAIL_USERNAME=${{ secrets.GMAIL_USERNAME }}" >> .env.prod
          echo "GMAIL_APP_PASSWORD=${{ secrets.GMAIL_APP_PASSWORD }}" >> .env.prod
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> .env.prod
          echo "Step 3: .env.prod 파일 생성 완료"

      - name: .env.prod 파일 아티팩트 업로드
        uses: actions/upload-artifact@v2
        with:
          name: env-prod-file
          path: .env.prod
      - name: .env.prod 파일 아티팩트 업로드 완료
        run: |
          echo "Step 4: .env.prod 파일 아티팩트 업로드 완료"

      # Step 4: Docker Compose를 사용하여 Docker 이미지 빌드
      - name: Docker Compose를 사용하여 Docker 이미지 빌드
        run: |
          echo "Step 5: Docker Compose를 사용하여 Docker 이미지 빌드 시작"
          docker-compose -f prod-build-compose.yml --env-file .env.prod build
          echo "Step 5: Docker Compose를 사용하여 Docker 이미지 빌드 완료"

      # Step 5: Docker 이미지 태그 및 ECR에 푸
