debug: false

logging:
  level:
    org.springframework.security: DEBUG
    com.mgnt.userservice: DEBUG
#    org.hibernate.type.descriptor.sql.BasicBinder: trace

server:
  port: 8083
  error:
    whitelabel:
      enabled: true
    include-message: always
  servlet:
    context-path: /
    context-parameters:
      throwExceptionIfNoHandlerFound: true

spring:
  application:
    name: reservation-service
  config:
    import:
      - classpath:/application-prod.yml
      - classpath:/application-local.yml
      - classpath:/application-secrets.yml

  datasource:
    hikari:
      maximum-pool-size: 10
      max-lifetime: 150000  # 150초 (밀리초 단위)
      idle-timeout: 600000  # 10분 (밀리초 단위)
      connection-timeout: 30000 # 30초 (밀리초 단위)
      validation-timeout: 5000  # 5초 (밀리초 단위)

    url: jdbc:mysql://localhost:3308/ticketing_db?serverTimezone=Asia/Seoul&characterEncoding=UTF-8&autoReconnect=true&createDatabaseIfNotExist=true
    username: developer
    password: 12345
    driver-class-name: com.mysql.cj.jdbc.Driver

  jackson:
    time-zone: Asia/Seoul
    property-naming-strategy: SNAKE_CASE

  web:
    resources:
      add-mappings: false

  mail:
    host: smtp.gmail.com
    port: 587


    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  jpa:
    defer-datasource-initialization: true # 데이터 소스 초기화를 지연시킵니다.
    hibernate.ddl-auto: none
    show-sql: true # SQL 쿼리를 콘솔에 출력하도록 설정합니다.
    properties:
      hibernate:
        format_sql: true # 출력되는 SQL 쿼리를 읽기 쉽게 포맷합니다.
        show_sql: true # SQL 쿼리를 출력하도록 설정합니다.
        dialect: org.hibernate.dialect.MySQLDialect
        default_batch_fetch_size: 50 # Hibernate가 한 번에 가져올 배치 크기를 100으로 설정합니다.
  kafka:
    bootstrap-servers: localhost:9092,kafka:9092
    consumer:
      group-id: reservation-service-group